name: Daily IPv4 List Release

on:
  schedule:
    - cron: '0 18 * * *'  # UTC+0900 -> 03:00
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.x'  

    - name: Run script and generate ipv4 tsv file
      run: |
        go build -o ./getipv4 &&
        ./getipv4|gzip -best> ipv4cidr.tsv.gz &&
        MASK=true ./getipv4|gzip -best> ipv4mask.tsv.gz

    - name: Get the current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.date.outputs.date }}
        name: Release ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
        files: |
          ipv4cidr.tsv.gz
          ipv4mask.tsv.gz

    - name: Delete old releases
      run: |
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             https://api.github.com/repos/${{ github.repository }}/releases \
        | jq '[.[] | select(.created_at < "'$(date -d '-30 days' +%Y-%m-%dT%H:%M:%SZ')'")] | .[].id' \
        | xargs --no-run-if-empty -I {} curl -X DELETE \
                          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          https://api.github.com/repos/${{ github.repository }}/releases/{}